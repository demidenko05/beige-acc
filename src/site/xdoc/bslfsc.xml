<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

  <properties>
    <title>Beigesoft™ Linux From Source Code (LFSC).</title>
   </properties>

  <body>

    <h4>Beigesoft™ Linux From Source Code (LFSC).</h4>
    
    <h5>Why make Linux from source code?</h5>
<p>
The most Linux distributives are provided as binary packages.
Many Linux vendors stop provide 32bit versions. Sometime they provide non-well updates, and it's take a time to resolve problems (issues).
So, at first, it's about achieving independence and reliability.
</p>

<h5>What building/compiling methods exists?</h5>
<p>
  The first method is native building into current root "/". You can compile by this method any high-level application, e.g. a music player.
  It's need building environment to do this. This is minimum set of program and libraries - glibc, gcc, binutils, bash...
  To make this building environment from source code you should use cross compiling.
</p>
<p>
  The second is cross-compiling. This is building binary into different root even for different architecture, e.g. building for ARM (tablet OS) on a x86 PC.
  This is only method for tablet's/mobile's OS.
  There are four main standard variables to do this:
  <ul>
    <li>--sysroot - tells compiler where search headers, and linker where search libs (where is new sysroot)</li>
    <li>DESTDIR - tells "make" where new root directory to install this software</li>
    <li>--host - tells "configure" what target (built/compiled) architecture</li>
    <li>--build - tells "configure" what building(compiling) architecture, without "configure" will think that it's a native compiling, and "host" just point to proper sub-architecture, e.g. i786-pc-linux-gnu</li>
  </ul>
  There is also "--target" for building compiler tools for cross-compiling (gcc, binutils).
</p>
<p>There is also compiling with CHROOT method, LFS uses it.</p>

<p>The main problem is that even some low level software doesn't respect cross compiling.
For example built software may run just compiled libraries for building itself, so it will fail for different architecture target.
Even though CHROOT method often faces such problems, e.g. coreutils's error help2man: can't get `--help' info from man/dir.td/dir.
It seems that the cause is confusing about native and target libraries/settings files.
Testing is also the problem (in case of cross-compiling for ordinary computer).
Of course, special building systems for tablet's OS handle those problems.
</p>

<p>
  It's used pure "cross-compiling" method for making Beigesoft™ Linux From Source Code 1.2, that is for both low-level and high-level software.
  Classic building (native compiling on regular computer) deal with already installed libraries. It's often deal with cross-dependencies.
  Even though the base library GLIBC requires SELINUX for supporting it (of course, it's never linked to libselinux), so it's needs twice compiling of software that requires cross-dependencies.
  Facing two facts - "twice compiling cause cross-depending" and "cross-testing problem" leads to proper way of building LFSC:
  <ol>
    <li>pure cross-compiling including building software (gcc, binutils, make, etc.), i.e. making raw LFSC</li>
    <li>pure native-compiling (including tests and cross-dependency) all software again on newly born raw LFSC</li>
  </ol>
  So next version 1.3 will include building tools.
</p>

<p>
The work was done on Debian 9. It already has cross-compilers for all architectures.
</p>

<p>
You can download source code (set of bash-scripts and instructions) from <a href="https://sourceforge.net/projects/linux-from-source-code/">https://sourceforge.net/projects/linux-from-source-code/</a>
</p>
<p>
References:
<ul>
  <li><a href="https://wiki.debian.org/Multiarch">about cross-compiling https://wiki.debian.org/Multiarch</a></li>
  <li>Linux From Scratch (LFS) http://www.linuxfromscratch.org</li>
  <li><a href="https://trac.clfs.org/">Cross-Compiled Linux From Scratch https://trac.clfs.org/</a></li>
  <li><a href="https://www.linuxjournal.com/content/diy-build-custom-minimal-linux-distribution-source">DIY: Build a Custom Minimal Linux Distribution from Source by Petros Koutoupis</a></li>
</ul>

</p>



  </body>

</document>
