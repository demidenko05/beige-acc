<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

  <properties>
    <title>Beigesoft™ Linux From Source Code (LFSC).</title>
   </properties>

  <body>

    <h4>Beigesoft™ Linux From Source Code (LFSC).</h4>
    
    <h5>Why make Linux from source code?</h5>
<p>
The most Linux distributives are provided as binary packages.
Many Linux providers stop provide 32bit versions. Sometime they provide non-well updates, and it's take a time to resolve problems (issues).
So, at first, it's about achieving independence and reliability.
</p>

<h5>What building/compiling methods exists?</h5>
<p>
  The first method is native building into current root "/". You can compile by this method any high-level application, e.g. a music player.
  It's need building environment to do this. This is minimum set of program and libraries - glibc, gcc, binutils, bash...
  To make this building environment from scratch you should use cross compiling.
</p>
<p>
  The second, but actually the main method, is cross-compiling. This is building binary into different root even for different architecture, e.g. building for ARM (tablet OS) on a x86 PC.
  There are two main standard variables to do this: "sysroot" and "DESTDIR".
</p>

<p>The main problem is that even some low level software doesn't respect cross compiling.
For example ACL try to install few man pages links into the building root, it's fixed by setting variable PKG_MAN_DIR.
Others software run just compiled libraries for building itself, so it will fail for different architecture target.
Because of it the next version of LFSC will use "non-root" installing.
Version 1.1 uses su root -c "make DESTDIR=$LFSC install", so you should use it on separate building Linux,
or remove "su root" from scripts and make it according version 1.
</p>

<p>
  It's used pure "cross-compiling" method for making Beigesoft™ Linux From Source Code, that is for both low and high level software.
  Right now LFSC has no building environment (gcc, make, ld, etc).
</p>

<p>
The work was done on Debian 9. It already has cross-compilers for any architecture.
</p>

<p>
You can download source code (set of bash-scripts and instructions) from <a href="https://sourceforge.net/projects/linux-from-source-code/">https://sourceforge.net/projects/linux-from-source-code/</a>
</p>
<p>
References:
<ul>
  <li><a href="https://wiki.debian.org/Multiarch">about cross-compiling https://wiki.debian.org/Multiarch</a></li>
  <li>Linux From Scratch (LFS) http://www.linuxfromscratch.org</li>
  <li><a href="https://trac.clfs.org/">Cross-Compiled Linux From Scratch https://trac.clfs.org/</a></li>
  <li><a href="https://www.linuxjournal.com/content/diy-build-custom-minimal-linux-distribution-source">DIY: Build a Custom Minimal Linux Distribution from Source by Petros Koutoupis</a></li>
</ul>

</p>



  </body>

</document>
