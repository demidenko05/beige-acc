<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

  <properties>
    <title>Beigesoftâ„¢ Accounting</title>
   </properties>

  <body>

    <section name="Sales tax aggregate (combined) rate method.">
      
      <p>Keywords: Sales tax aggregate (combined) rate method.</p>
      
      <h4>Sales tax aggregate (combined) rate method.</h4>
      <p>If several sales taxes are applied to an item (a merchandise or a service), then you can (or must according to the law) use this method.
      For example, in USA these are State, Local (County, City...) sales taxes.
      </p>
      <p>This method is useful for "due on item basis" method for both "tax included or not" methods, and for invoice basis - tax included in price. 
        Aggregate tax rate for multi-taxes gives different tax result (against "non-aggregate").
        For example tax1=11%, tax2=1.6%, tax3=3.3% for two lines (4.56USD and 51.13USD):
<pre style="white-space: pre-wrap;">
A.non-aggregate rate:
item  price tax1  tax2  tax3  total t.tax
1     4.56  0.5   0.07  0.15  5.28  0.72
2     53.13 5.84  0.85  1.75  61.57 8.44
total taxes 9.16

B.aggregate tax rate (15.9%):
item  price atax  total
1     4.56  0.73  5.29
2     53.13 8.45  61.58
aggregate tax total 9.18
</pre>
The difference is 1 cent for each line. Difference is 2 cents for totals.
      </p>
      <p>
In case of item basis, this is performance friendly method, because of there is no need to keep multiply tax entries for each invoice line.
      </p>
      <p>This method allows to implement "taxes are included in price" with "no problems" for both item and invoice basis methods.</p>
      <p>Total taxes are calculated from total of aggregated tax, for example above:
<pre style="white-space: pre-wrap;">
tax1 = 9.18 * 0.11 / 0.159 = 6.35
tax2 = 9.18 * 0.016 / 0.159 = 0.92
tax3 = 9.18 - (9.35 + 0.92) = 1.91
</pre>
To prevent difference between total aggregate from lines and total taxes cause grouping rounding error,
the last tax total line is the rest of aggregate tax.
      </p>
      <p>Property "ST aggregate rate" in "Accounting Settings" and "Tax destination" is used to switch this method, default is false.
      "Aggregate rate" is mostly used method for multi-taxes. If your items have only tax (e.g. item1 10%, item2 18%, etc), then set property "Aggregate tax rate or only tax" to "Yes".
      </p>
      
      <h4>Example of sales invoices for both methods (aggregate and not).</h4>
      <p>Add taxes that described above. Apply them to new fake services "Service A" and "Service B".</p>
      <p>
        System's "Aggregate tax rate or only tax" is "Yes",  so just add new invoice with aggregate rate and two services with prices and taxes that described above:
        <p align="center"><img style="max-width: 100%" src="images/staggr1.png" /></p>
        <p align="center"><img style="max-width: 100%" src="images/staggr2.png" /></p>
      </p>
      <p>
        Add new customer.
        Add "tax destination" with "ST aggregate rate"="No", and set it in the services and new customer.
        Then add new invoice with the same services and prices and taxes for new customer:
        <p align="center"><img style="max-width: 100%" src="images/staggr3.png" /></p>
        <p align="center"><img style="max-width: 100%" src="images/staggr4.png" /></p>
      </p>
    </section>

  </body>

</document>
