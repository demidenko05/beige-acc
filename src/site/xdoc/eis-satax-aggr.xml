<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

  <properties>
    <title>Beigesoftâ„¢ Accounting</title>
   </properties>

  <body>

    <section name="Sales tax combined(aggregate) rate method.">
      
      <p><b>Keywords: Sales tax combined(aggregate) rate method.</b></p>
      
      <p>If several sales taxes are applied to an item (a merchandise or a service), then you can (or must according to the law) use this method.
      For example, in the USA these are State, Local (County, City...) sales taxes.
      </p>
      <p>This method is useful for the "due on item basis" method for the both "tax included or not included" methods, and for the "invoice basis" - tax included in price. 
        The combined tax rate for multiple taxes yields a tax amount that is different from the non-combined tax rate.
        For example tax1=11%, tax2=1.6%, tax3=3.3% for two lines (4.56USD and 51.13USD):
<pre style="white-space: pre-wrap;">
A.non-combined rate:
item  price tax1  tax2  tax3  total t.tax
1     4.56  0.5   0.07  0.15  5.28  0.72
2     53.13 5.84  0.85  1.75  61.57 8.44
total taxes 9.16

B.combined tax rate (15.9%):
item  price atax  total
1     4.56  0.73  5.29
2     53.13 8.45  61.58
combined tax total 9.18
</pre>
The difference is 1 cent for each line. The difference is 2 cents for the totals.
      </p>
      <p>
In the case of the item basis method, this is a performance friendly method, because there is no need to keep multiple tax entries for each invoice line.
      </p>
      <p>This method allows to implement the "taxes included in price" method with "no problems" for both "item/invoice basis" methods.</p>
      <p>Total taxes are calculated from the total of aggregate tax, for example above:
<pre style="white-space: pre-wrap;">
tax1 = 9.18 * 0.11 / 0.159 = 6.35
tax2 = 9.18 * 0.016 / 0.159 = 0.92
tax3 = 9.18 - (9.35 + 0.92) = 1.91
</pre>
To prevent the difference between the aggregate total from the lines and the tax total because of grouping rounding error,
the last tax total line is the rest of the aggregate tax (i.e. tax3 = 9.18 - (9.35 + 0.92)).
      </p>
      <p>The "ST aggregate rate" property in the "Accounting Settings" and a "Tax destination" is used to switch this method, by default it's false.
      The "Aggregate rate" is the most used method for multiple-taxes. If your items have only tax (e.g. item1 10%, item2 18%, etc), then set the "Aggregate tax rate or only tax" property to "Yes".
      </p>
      
      <h4>Example of a sales invoices for the both methods (aggregate and non-aggregate).</h4>
      <p>Add the taxes that are described above. Apply them to new fake services "Service A" and "Service B".</p>
      <p>
        The system's "Aggregate tax rate or only tax" property is "Yes",  so just add a new invoice with the aggregate rate and those two services with the prices and the taxes that described above:
      </p>
      <p align="center"><img style="max-width: 100%" src="images/staggr1.png" /></p>
      <p align="center"><img style="max-width: 100%" src="images/staggr2.png" /></p>
      <p>
        Add a new customer.
        Add a new "tax destination" with the "ST aggregate rate" property set to "No", and assign it to the services and the new customer.
        Then add a new invoice with the same services, prices and taxes for a new customer:
      </p>
      <p align="center"><img style="max-width: 100%" src="images/staggr3.png" /></p>
      <p align="center"><img style="max-width: 100%" src="images/staggr4.png" /></p>
    </section>

  </body>

</document>
